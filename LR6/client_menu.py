import datetime
from db import connect_db
from unauthorized_menu import filter_products, view_catalog  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ db_connection.py

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ 
def get_user_data(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT client_id, first_name, last_name, phone, email
            FROM client
            WHERE client_id = %s
        """, (client_id,))
        client_data = cursor.fetchone()
        cursor.close()
        conn.close()

        if client_data:
            print(f"""
            ID –∫–ª–∏–µ–Ω—Ç–∞: {client_data[0]}
            –ò–º—è: {client_data[1]}
            –§–∞–º–∏–ª–∏—è: {client_data[2]}
            –¢–µ–ª–µ—Ñ–æ–Ω: {client_data[3]}
            Email: {client_data[4]}
            """)
        else:
            print("–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        return None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã –∫–ª–∏–µ–Ω—Ç–∞
def get_cart_items(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT p.name, p.brand, ci.product_quantity, ci.product_price, (ci.product_quantity * ci.product_price) AS total_price
            FROM cart_item ci
            JOIN product p ON ci.product_id = p.product_id
            JOIN cart c ON ci.cart_id = c.cart_id
            WHERE c.client_id = %s
        """, (client_id,))
        cart_items = cursor.fetchall()
        cursor.close()
        conn.close()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
        if cart_items:
            for idx, item in enumerate(cart_items, start=1):
                print(f"""
                –¢–æ–≤–∞—Ä {idx}:
                - –ù–∞–∑–≤–∞–Ω–∏–µ: {item[0]}
                - –ë—Ä–µ–Ω–¥: {item[1]}
                - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[2]}
                - –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item[3]:.2f}
                - –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {item[4]:.2f}
                """)
            # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
            total_price = get_cart_total_price(client_id)
            if total_price is not None:
                print(f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã: {total_price:.2f}")
            else:
                print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã.")
        else:
            print("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–∑–∏–Ω—ã –∫–ª–∏–µ–Ω—Ç–∞
def get_cart_total_price(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT price
            FROM cart
            WHERE client_id = %s
        """, (client_id,))
        total_price = cursor.fetchone()
        cursor.close()
        conn.close()
        return total_price[0] if total_price else None
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        return None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
def add_to_cart(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()

        # –í—ã–≤–æ–¥–∏–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        cursor.execute("""
            SELECT product_id, name, brand, price, quantity
            FROM product
            WHERE quantity > 0
        """)
        products = cursor.fetchall()

        if not products:
            print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É.")
            cursor.close()
            conn.close()
            return

        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:")
        for product in products:
            print(f"ID: {product[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {product[1]}, –ë—Ä–µ–Ω–¥: {product[2]}, –¶–µ–Ω–∞: {product[3]:.2f}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: {product[4]}")

        try:
            product_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å: "))
            product_quantity = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: "))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            cursor.execute("""
                SELECT quantity, price
                FROM product
                WHERE product_id = %s
            """, (product_id,))
            product_data = cursor.fetchone()

            if not product_data:
                print("–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            elif product_quantity > product_data[0]:
                print("–ù–∞ —Å–∫–ª–∞–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞.")
            else:
                # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ—Ä–∑–∏–Ω—ã –∫–ª–∏–µ–Ω—Ç–∞
                cursor.execute("""
                    SELECT cart_id
                    FROM cart
                    WHERE client_id = %s
                """, (client_id,))
                cart_id = cursor.fetchone()

                if not cart_id:
                    print("–£ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã.")
                else:
                    cart_id = cart_id[0]
                    product_price = product_data[1]

                    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
                    cursor.execute("""
                        INSERT INTO cart_item (cart_id, product_id, product_quantity, product_price)
                        VALUES (%s, %s, %s, %s)
                    """, (cart_id, product_id, product_quantity, product_price))


                    print("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.")

            conn.commit()
        except ValueError:
            print("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥.")
        finally:
            cursor.close()
            conn.close()
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


def create_order(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
        cursor.execute("""
            SELECT price
            FROM cart
            WHERE client_id = %s
        """, (client_id,))
        total_price = cursor.fetchone()

        if not total_price:
            print("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑.")
            cursor.close()
            conn.close()
            return

        total_price = total_price[0]

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        cursor.execute("""
            INSERT INTO "order" (client_id, price)
            VALUES (%s, %s)
            RETURNING order_id
        """, (client_id, total_price))
        order_id = cursor.fetchone()[0]

        conn.commit()
        print(f"–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}, –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_price:.2f}")
        cursor.close()
        conn.close()
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")


def view_orders(client_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT o.order_id, o.date, o.price
            FROM "order" o
            WHERE o.client_id = %s
            ORDER BY o.date DESC
        """, (client_id,))
        orders = cursor.fetchall()
        cursor.close()
        conn.close()

        if orders:
            print("\n" + "=" * 50)
            print("üõçÔ∏è –í–ê–®–ò –ó–ê–ö–ê–ó–´".center(50))
            print("=" * 50)

            for order in orders:
                order_id = order[0]
                order_date = order[1].strftime("%d.%m.%Y %H:%M")
                order_price = order[2]

                print(f"\nüÜî –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}")
                print(f"üìÖ –î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: {order_date}")
                print(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {order_price:.2f} —Ä—É–±.")
                print("-" * 50)
                print("üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:")
                view_order_items(order_id)
                print("=" * 50)
        else:
            print("–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

def view_order_items(order_id):
    conn = connect_db()
    if conn:
        cursor = conn.cursor()
        cursor.execute("""
            SELECT p.name, oi.product_quantity, oi.product_price, 
                   (oi.product_quantity * oi.product_price) AS total_price
            FROM order_item oi
            JOIN product p ON oi.product_id = p.product_id
            WHERE oi.order_id = %s
        """, (order_id,))
        order_items = cursor.fetchall()
        cursor.close()
        conn.close()

        if order_items:
            for idx, item in enumerate(order_items, start=1):
                print(f"""
                {idx}. –ù–∞–∑–≤–∞–Ω–∏–µ: {item[0]}
                   üî∏ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[1]}
                   üî∏ –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item[2]:.2f} —Ä—É–±.
                   üî∏ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {item[3]:.2f} —Ä—É–±.
                """)
        else:
            print("‚ùå –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–º –∑–∞–∫–∞–∑–µ.")


def log_action(client_id, action):
    connection = connect_db()
    cursor = connection.cursor()
    try:
        cursor.execute("""
            INSERT INTO logs (client_id, action)
            VALUES (%s, %s)
        """, (client_id, action))
        connection.commit()
        print(f"‚úÖ –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω: {action}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞: {e}")
    finally:
        cursor.close()
        connection.close()

# –ú–µ–Ω—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
def client_menu(user_id):
    while True:
        print("\n" + "=" * 50)
        print("üõí –ú–ï–ù–Æ –ö–õ–ò–ï–ù–¢–ê".center(50))
        print("=" * 50)
        print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–∏—Ö –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("2. –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤")
        print("3. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤")
        print("4. –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã")
        print("5. –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É")
        print("6. –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
        print("7. –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤")
        print("8. –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("=" * 50)

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1, 2, 3, 4, 5, 6, 7, 8): ")

        if choice == '1':
            print("–í–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
            get_user_data(user_id)
            log_action(user_id, "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        elif choice == '2':  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
            print("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤...")
            view_catalog()
            log_action(user_id, "–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤")
        elif choice == '3':  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
            print("–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...")
            filter_products()
            log_action(user_id, "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤")
        elif choice == '4':  # –ù–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é: –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–æ—Ä–∑–∏–Ω—ã
            print("–≠–ª–µ–º–µ–Ω—Ç—ã –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω—ã:")
            get_cart_items(user_id)
        elif choice == '5':  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞
            add_to_cart(user_id)
            log_action(user_id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É")
        elif choice == '6':  # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
            create_order(user_id)
            log_action(user_id, "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞")
        elif choice == '7':  # –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤
            print("–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤...")
            view_orders(user_id)
            log_action(user_id, "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤")
        elif choice == '8':
            print("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
            log_action(user_id, "–í—ã—Ö–æ–¥ –∏–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –º–µ–Ω—é")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é 1, 2, 3, 4, 5, 6, 7 –∏–ª–∏ 8.")
