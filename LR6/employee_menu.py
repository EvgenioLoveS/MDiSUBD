import datetime
from db import connect_db

def employee_menu():
    while True:
        print("\n" + "="*40)
        print("                –ú–µ–Ω—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
        print("="*40)
        print("1. –£–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä–∞–º–∏")
        print("2. –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
        print("3. –£–ø—Ä–∞–≤–ª—è—Ç—å —Å–∫–∏–¥–∫–∞–º–∏")
        print("4. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö")
        print("5. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ª–æ–≥–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤")
        print("6. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö") 
        print("7. –í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        print("="*40)

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-7): ")

        if choice == '1':
            manage_products()
        elif choice == '2':
            manage_categories()
        elif choice == '3':
            manage_discounts()
        elif choice == '4':  
            view_clients()
        elif choice == '5':  
            view_clients_logs()
        elif choice == '6':
            view_orders()
        elif choice == '7':
            print("\nüîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
            break
        else:
            print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 7.")
            print("-" * 40)

def manage_products():
    while True:
        print("\n" + "="*40)
        print("            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏")
        print("="*40)
        print("1. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä")
        print("2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        print("3. –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("4. –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä")
        print("5. –í—ã–π—Ç–∏")
        print("="*40)

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ")

        if choice == '1':
            add_product()
        elif choice == '2':
            view_products()
        elif choice == '3':
            update_product()
        elif choice == '4':
            delete_product()
        elif choice == '5':
            break
        else:
            print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 5.")
            print("-" * 40)


def add_product():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞."""
    # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    view_categories()

    connection = connect_db()
    cursor = connection.cursor()
    try:
        name = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ")
        category_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ (—Å–º. —Å–ø–∏—Å–æ–∫ –≤—ã—à–µ): "))
        price = float(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞: "))
        quantity = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞: "))
        brand = input("–í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ —Ç–æ–≤–∞—Ä–∞: ")
        production_date = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (YYYY-MM-DD): ")
        description = input("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ")

        cursor.execute("""
            INSERT INTO product 
            (name, product_category_id, price, quantity, brand, production_date, description)
            VALUES (%s, %s, %s, %s, %s, %s, %s)
        """, (name, category_id, price, quantity, brand, production_date, description))
        connection.commit()
        print("\n‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
    finally:
        cursor.close()
        connection.close()


def view_products():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω—É–∂–Ω—ã—Ö –ø–æ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã product
        cursor.execute("""
            SELECT 
                product_id,
                product_category_id,
                price,
                name,
                production_date,
                quantity,
                brand,
                description
            FROM 
                product
        """)
        products = cursor.fetchall()

        # –ó–∞–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –≤—Ä—É—á–Ω—É—é
        column_names = [
            "product_id", 
            "product_category_id", 
            "price", 
            "name", 
            "production_date", 
            "quantity", 
            "brand", 
            "description"
        ]

        # –í—ã–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–ª–æ–Ω–æ–∫
        print("\nüì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:")
        print(" | ".join(column_names))

        # –í—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π
        for product in products:
            print(" | ".join(str(value) if value is not None else "NULL" for value in product))
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: {e}")
    finally:
        cursor.close()
        connection.close()

def update_product():
    view_products()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    connection = connect_db()
    cursor = connection.cursor()
    try:
        product_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ")
        column = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è (name, price, quantity, brand_id, product_category_id): ")
        new_value = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ (–µ—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è price –∏–ª–∏ quantity)
        if column in ["price", "quantity", "brand_id", "product_category_id"]:
            new_value = int(new_value)

        cursor.execute(f"UPDATE product SET {column} = %s WHERE product_id = %s", (new_value, product_id))
        connection.commit()
        print("\n‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
    finally:
        cursor.close()
        connection.close()


def delete_product():
    view_products()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    connection = connect_db()
    cursor = connection.cursor()
    try:
        product_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")

        cursor.execute("DELETE FROM product WHERE product_id = %s", (product_id,))
        connection.commit()
        print("\n‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
    finally:
        cursor.close()
        connection.close()




def manage_categories():
    while True:
        print("\n" + "="*40)
        print("          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏")
        print("="*40)
        print("1. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        print("2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        print("3. –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        print("4. –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        print("5. –í—ã–π—Ç–∏")
        print("="*40)

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ")

        if choice == '1':
            add_category()
        elif choice == '2':
            view_categories()
        elif choice == '3':
            update_category()
        elif choice == '4':
            delete_category()
        elif choice == '5':
            break
        else:
            print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 5.")
            print("-" * 40)

def add_category():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ")
        cursor.execute("INSERT INTO product_category (name) VALUES (%s)", (name,))
        connection.commit()
        print("\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
    finally:
        cursor.close()
        connection.close()

def view_categories():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        cursor.execute("SELECT * FROM product_category")
        categories = cursor.fetchall()
        print("\nüìÇ –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
        for category in categories:
            print(f"ID: {category[0]}, –ù–∞–∑–≤–∞–Ω–∏–µ: {category[1]}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {e}")
    finally:
        cursor.close()
        connection.close()

def update_category():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        print("\nüìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        view_categories()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π

        category_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ")
        new_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ")

        cursor.execute("UPDATE product_category SET name = %s WHERE product_category_id = %s", (new_name, category_id))
        connection.commit()
        print("\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
    finally:
        cursor.close()
        connection.close()


def delete_category():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        print("\nüìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        view_categories()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π

        category_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
        cursor.execute("DELETE FROM product_category WHERE product_category_id = %s", (category_id,))
        connection.commit()
        print("\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {e}")
    finally:
        cursor.close()
        connection.close()


def manage_discounts():
    while True:
        print("\n" + "="*40)
        print("           –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∞–º–∏")
        print("="*40)
        print("1. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å–∫–∏–¥–∫—É")
        print("2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–∏–¥–æ–∫")
        print("3. –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–∏–¥–∫—É")
        print("4. –£–¥–∞–ª–∏—Ç—å —Å–∫–∏–¥–∫—É")
        print("5. –í—ã–π—Ç–∏")
        print("="*40)

        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ")

        if choice == '1':
            add_discount()
        elif choice == '2':
            view_discounts()
        elif choice == '3':
            update_discount()
        elif choice == '4':
            delete_discount()
        elif choice == '5':
            break
        else:
            print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 1 –¥–æ 5.")
            print("-" * 40)


def add_discount():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        name = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏: ")
        description = input("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏: ")
        percent = int(input("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏: "))
        is_active = input("–°–∫–∏–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞? (yes/no): ").lower() == "yes"

        cursor.execute("""
            INSERT INTO discount (name, description, percent, is_active) 
            VALUES (%s, %s, %s, %s)
        """, (name, description, percent, is_active))
        connection.commit()
        print("\n‚úÖ –°–∫–∏–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏: {e}")
    finally:
        cursor.close()
        connection.close()


def view_discounts():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Å–∫–∏–¥–æ–∫."""
    connection = connect_db()
    cursor = connection.cursor()
    try:
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã discount
        cursor.execute("""
            SELECT 
                discount_id,
                description,
                name,
                percent,
                is_active
            FROM 
                discount
        """)
        discounts = cursor.fetchall()

        # –ó–∞–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
        column_names = [
            "discount_id", 
            "description", 
            "name", 
            "percent", 
            "is_active"
        ]

        # –í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüéÅ –°–ø–∏—Å–æ–∫ —Å–∫–∏–¥–æ–∫:")
        print(" | ".join(column_names))
        print("-" * 50)

        # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∏–¥–∫–∞—Ö
        for discount in discounts:
            print(" | ".join(
                str(value) if value is not None else "NULL" 
                for value in discount
            ))
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ —Å–∫–∏–¥–æ–∫: {e}")
    finally:
        cursor.close()
        connection.close()

def update_discount():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        print("\nüéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–∏–¥–∫–∏:")
        view_discounts()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–∏–¥–æ–∫

        discount_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —Å–∫–∏–¥–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: ")
        column = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è (name, description, percent, is_active): ")
        new_value = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
        if column == "percent":
            new_value = int(new_value)
        elif column == "is_active":
            new_value = new_value.lower() == "yes"

        cursor.execute(f"UPDATE discount SET {column} = %s WHERE discount_id = %s", (new_value, discount_id))
        connection.commit()
        print("\n‚úÖ –°–∫–∏–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏: {e}")
    finally:
        cursor.close()
        connection.close()


def delete_discount():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        print("\nüéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–∏–¥–∫–∏:")
        view_discounts()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–∏–¥–æ–∫

        discount_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —Å–∫–∏–¥–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
        cursor.execute("DELETE FROM discount WHERE discount_id = %s", (discount_id,))
        connection.commit()
        print("\n‚úÖ –°–∫–∏–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏: {e}")
    finally:
        cursor.close()
        connection.close()


def view_clients():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö."""
    connection = connect_db()
    cursor = connection.cursor()
    try:
        cursor.execute("""
            SELECT 
                client_id, 
                first_name, 
                last_name, 
                phone, 
                email 
            FROM 
                client
        """)
        clients = cursor.fetchall()

        print("\nüë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö:\n")
        if clients:
            # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–∂–¥–æ–º –∫–ª–∏–µ–Ω—Ç–µ
            for client in clients:
                print(f"ID: {client[0]}")
                print(f"–ò–º—è: {client[1]}")
                print(f"–§–∞–º–∏–ª–∏—è: {client[2]}")
                print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {client[3]}")
                print(f"Email: {client[4]}")
                print("-" * 20)  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–∞–º–∏
        else:
            print("–î–∞–Ω–Ω—ã–µ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö: {e}")
    finally:
        cursor.close()
        connection.close()


def view_orders():
    connection = connect_db()
    cursor = connection.cursor()
    try:
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–∫–∞–∑–∞—Ö
        cursor.execute("""
            SELECT 
                o.order_id,
                o.client_id,
                o.date AS order_date,
                o.price AS total_price,
                c.first_name AS client_first_name,
                c.last_name AS client_last_name
            FROM 
                "order" o
            JOIN 
                client c ON o.client_id = c.client_id
        """)
        orders = cursor.fetchall()

        # –ó–∞–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
        column_names = [
            "order_id", 
            "client_id", 
            "order_date", 
            "total_price", 
            "client_first_name", 
            "client_last_name"
        ]

        # –í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìú –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤:")
        print(" | ".join(column_names))
        print("-" * 50)

        # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–∞—Ö
        for order in orders:
            print(" | ".join(
                str(value) if value is not None else "NULL" 
                for value in order
            ))
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤: {e}")
    finally:
        cursor.close()
        connection.close()


def view_clients_logs():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤."""
    connection = connect_db()
    cursor = connection.cursor()
    try:
        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –∫–ª–∏–µ–Ω—Ç—É
        cursor.execute("""
            SELECT logs.id, client.first_name, client.last_name, logs.action, logs.timestamp
            FROM logs
            INNER JOIN client ON logs.client_id = client.client_id
            ORDER BY logs.timestamp DESC
        """)
        logs = cursor.fetchall()

        # –í—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        print("\nüìù –õ–æ–≥–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        print(f"{'ID':<5} {'–ò–º—è':<15} {'–§–∞–º–∏–ª–∏—è':<15} {'–î–µ–π—Å—Ç–≤–∏–µ':<30} {'–í—Ä–µ–º—è':<20}")
        print("-" * 85)

        # –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ –ª–æ–≥–∞—Ö
        for log in logs:
            print(f"{log[0]:<5} {log[1]:<15} {log[2]:<15} {log[3]:<30} {log[4]}")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}")
    finally:
        cursor.close()
        connection.close()

